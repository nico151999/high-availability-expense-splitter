{{- $selectorParam := (dict "shortName" (include "reflectionService-shortName" .) "releaseName" .Release.Name) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "service-name-deployment" (include "reflectionService-shortName" .) }}
  labels:
    {{- include "service-selectorLabels-deployment" $selectorParam | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "service-selectorlabels-pod" $selectorParam | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "service-selectorlabels-pod" $selectorParam | nindent 8 }}
        app.kubernetes.io/version: "{{ .Chart.Version }}"
        helm.sh/revision: "{{ .Release.Revision }}"
      {{- if (default .Values.haExpenseSplitter.linkerdMesh .Values.haExpenseSplitter.services.reflection.linkerdMesh) }}
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/default-inbound-policy: cluster-authenticated
      {{- end }}
    spec:
      {{- include "imagepullsecrets" (dict "primary" .Values.haExpenseSplitter.services.reflection.imagePullSecrets "fallback" .Values.haExpenseSplitter.imagePullSecrets) | nindent 6 }}
      {{- include "securitycontext" (dict "primary" .Values.haExpenseSplitter.services.reflection.securityContext "fallback" .Values.haExpenseSplitter.securityContext) | nindent 6 }}
      initContainers:
        - name: wait-for-trace-collector
          image: {{ include "busyboxImage" $ }}
          {{- if $.Values.haExpenseSplitter.readOnlyRootFilesystem }}
          securityContext:
            readOnlyRootFilesystem: true
          {{- end }}
          command:
            - 'sh'
            - '-c'
            - |
              until nc -z "${{ include "global-traceCollectorHostKey" . }}" "${{ include "global-traceCollectorPortKey" . }}"
              do
                echo \"waiting for trace collector\"
                sleep 1
              done
          env:
            - name: {{ include "global-traceCollectorHostKey" . }}
              valueFrom:
                configMapKeyRef:
                  name: {{ include "global-name-configMap" . }}
                  key: {{ include "global-traceCollectorHostKey" . }}
            - name: {{ include "global-traceCollectorPortKey" . }}
              valueFrom:
                configMapKeyRef:
                  name: {{ include "global-name-configMap" . }}
                  key: {{ include "global-traceCollectorPortKey" . }}
      containers:
        - name: "{{ .Chart.Name }}-service-reflection"
          image: "{{ .Values.haExpenseSplitter.services.reflection.image.repository }}:{{ .Values.haExpenseSplitter.services.reflection.image.tag }}"
          imagePullPolicy: "{{default  .Values.haExpenseSplitter.imagePullPolicy .Values.haExpenseSplitter.services.reflection.imagePullPolicy}}"
          {{- if .Values.readOnlyRootFilesystem }}
          securityContext:
            readOnlyRootFilesystem: true
          {{- end }}
          resources:
            {{- toYaml .Values.haExpenseSplitter.services.reflection.resources | nindent 12 }}
          ports:
            - name: {{ include "service-name-port" (include "reflectionService-shortName" .) }}
              containerPort: {{ include "service-serverPort" . }}
              protocol: TCP
          env:
            - name: {{ include "service-serverPortKeyName" (include "reflectionService-shortName" .) }}
              value: "{{ include "service-serverPort" . }}"
            - name: {{ include "global-traceCollectorHostKey" . }}
              valueFrom:
                configMapKeyRef:
                  name: {{ include "global-name-configMap" . }}
                  key: {{ include "global-traceCollectorHostKey" . }}
            - name: {{ include "global-traceCollectorPortKey" . }}
              valueFrom:
                configMapKeyRef:
                  name: {{ include "global-name-configMap" . }}
                  key: {{ include "global-traceCollectorPortKey" . }}