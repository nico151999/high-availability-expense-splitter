{{- range $serviceName, $serviceSpec := .Values.haExpenseSplitter.services.specs }}
{{/*if at least one service is exposed create an ingress*/}}
{{- if lt 0 (len $serviceSpec.ingress.endpoints) }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "{{ include "service-name-ingress" "services" }}"
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
    nginx.ingress.kubernetes.io/server-snippet: "grpc_read_timeout 86400s; grpc_send_timeout 86400s;"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "{{ $.Values.haExpenseSplitter.services.cors.allowedMethods }}"
    nginx.ingress.kubernetes.io/cors-allow-headers: "{{ $.Values.haExpenseSplitter.services.cors.allowedHeaders }}"
    {{- range $_, $serviceSpec := $.Values.haExpenseSplitter.services.specs }}
      {{- if default $.Values.haExpenseSplitter.linkerdMesh $serviceSpec.linkerdMesh }}
    nginx.ingress.kubernetes.io/service-upstream: "true"
    {{- break}}
    {{- end }}
    {{- end}}
spec:
  ingressClassName: "{{ $.Values.haExpenseSplitter.ingressClassName }}"
  rules:
    - host: "{{ $.Values.haExpenseSplitter.services.ingress.host }}"
      http:
        paths:
          {{- range $serviceName, $serviceSpec := $.Values.haExpenseSplitter.services.specs }}
          {{- range $_, $endpoint := $serviceSpec.ingress.endpoints }}
          - path: {{ $endpoint.pathRegex }}
            pathType: ImplementationSpecific
            backend:
              service:
                name: "{{ include "service-name-service" $serviceName }}"
                port:
                  name: "{{ include "service-name-port" $serviceName }}"
          {{- end }}
          {{- end}}
  tls:
    - hosts:
        - "{{$.Values.haExpenseSplitter.services.ingress.host}}"
      secretName: "{{$.Values.haExpenseSplitter.services.ingress.certSecret}}"
{{- break}}
{{- end}}
{{- end}}